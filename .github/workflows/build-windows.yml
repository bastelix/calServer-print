name: Build Windows Electron App

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version Tag (z.â€¯B. v1.0.0)'
        required: true

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository (mit PAT)
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Create Git Tag
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Build Python executable
        run: |
          pip install pyinstaller
          pyinstaller --noconfirm --onefile --name labeltool --add-data "app;app" launcher.py

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Install Node dependencies
        run: npm install
        working-directory: electron

      - name: Set version for Electron build
        run: |
          $version = "${{ github.event.inputs.version }}".TrimStart('v')
          npm version $version --no-git-tag-version
        working-directory: electron

      - name: Build Electron App (Windows)
        run: npm run build
        working-directory: electron

      - name: ZIP Portable und Installer
        run: |
          Compress-Archive -Path electron/release/*portable.exe -DestinationPath electron/release/portable.zip
          Compress-Archive -Path "electron/release/*Setup*.exe" -DestinationPath electron/release/installer.zip

      - name: Read Changelog Section
        id: changelog
        run: |
          $version="${{ github.event.inputs.version }}"
          $changelog = Get-Content CHANGELOG.md -Raw
          $section = ($changelog -split "# ")[1..100] | Where-Object { $_ -like "*$version*" } | Out-String
          echo "release_notes<<EOF" >> $env:GITHUB_OUTPUT
          echo "$section" >> $env:GITHUB_OUTPUT
          echo "EOF" >> $env:GITHUB_OUTPUT

      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: calServer Labeltool ${{ github.event.inputs.version }}
          body: ${{ steps.changelog.outputs.release_notes }}
          files: |
            electron/release/*.exe
            electron/release/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
